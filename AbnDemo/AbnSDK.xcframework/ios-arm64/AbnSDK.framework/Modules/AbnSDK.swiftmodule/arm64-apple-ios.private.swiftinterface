// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1 effective-5.10 (swiftlang-6.1.0.110.21 clang-1700.0.13.3)
// swift-module-flags: -target arm64-apple-ios15.6 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name AbnSDK
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -interface-compiler-version 6.1
@_exported import AbnSDK
import AdSupport
import Foundation
import Swift
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc public protocol OfferwallEventListener : ObjectiveC.NSObjectProtocol {
  @objc optional func didAdDataLoaded(_ offerwallView: AbnSDK.AdOfferwallView)
  @objc optional func didAdItemClicked(_ offerwallView: AbnSDK.AdOfferwallView, campaignId: Swift.Int, campaignName: Swift.String)
}
@_hasMissingDesignatedInitializers @objc @_Concurrency.MainActor @preconcurrency final public class AdOfferwallView : UIKit.UIView {
  @_Concurrency.MainActor @preconcurrency weak final public var offerwallListener: (any AbnSDK.OfferwallEventListener)?
  @objc @_Concurrency.MainActor @preconcurrency public init(frame: CoreFoundation.CGRect, viewController: UIKit.UIViewController)
  @objc @_Concurrency.MainActor @preconcurrency final public func loadData()
  @objc deinit
}
extension AbnSDK.AdOfferwallView : WebKit.WKNavigationDelegate {
  @_Concurrency.MainActor @preconcurrency @objc final public func webView(_ webView: WebKit.WKWebView, decidePolicyFor navigationAction: WebKit.WKNavigationAction, decisionHandler: @escaping @_Concurrency.MainActor (WebKit.WKNavigationActionPolicy) -> Swift.Void)
  @_Concurrency.MainActor @preconcurrency @objc final public func webView(_ webView: WebKit.WKWebView, didFinish navigation: WebKit.WKNavigation!)
}
extension AbnSDK.AdOfferwallView : WebKit.WKUIDelegate {
  @_Concurrency.MainActor @preconcurrency @objc final public func webView(_ webView: WebKit.WKWebView, createWebViewWith configuration: WebKit.WKWebViewConfiguration, for navigationAction: WebKit.WKNavigationAction, windowFeatures: WebKit.WKWindowFeatures) -> WebKit.WKWebView?
  @_Concurrency.MainActor @preconcurrency @objc final public func webViewDidClose(_ webView: WebKit.WKWebView)
}
extension AbnSDK.AdOfferwallView : WebKit.WKScriptMessageHandler {
  @_Concurrency.MainActor @preconcurrency @objc final public func userContentController(_ userContentController: WebKit.WKUserContentController, didReceive message: WebKit.WKScriptMessage)
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor @preconcurrency final public class AdOfferwallViewController : UIKit.UIViewController {
  @_Concurrency.MainActor @preconcurrency @objc override final public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class AbnSession : ObjectiveC.NSObject {
  @objc public static let shared: AbnSDK.AbnSession
  @objc public var appId: Swift.String?
  @objc public var userId: Swift.String?
  @objc public var uuid: Swift.String?
  @objc public var agreePrivacyPolicy: Swift.Bool
  @objc public func queryPublishState(completion: @escaping (Swift.Int) -> Swift.Void)
  @objc public func queryPublishState(target: ObjectiveC.NSObject, action: ObjectiveC.Selector)
  @objc public func queryAdvertiseCount(completion: @escaping (Swift.Int, Swift.Int) -> Swift.Void)
  @objc public func queryAdvertiseCount(target: ObjectiveC.NSObject, action: ObjectiveC.Selector)
  @objc public func queryPoint(completion: @escaping (Swift.Int) -> Swift.Void)
  @objc public func queryPoint(target: ObjectiveC.NSObject, action: ObjectiveC.Selector)
  @objc deinit
}
